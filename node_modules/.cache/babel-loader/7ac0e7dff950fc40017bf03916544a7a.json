{"ast":null,"code":"var _jsxFileName = \"F:\\\\ITI\\\\Course ReactJS\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { marked } from \"marked\";\nimport useLocalStorage from \"./components/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [code, setCode] = useLocalStorage(\"markdown\", \"## Hello\");\n  const [compiled, setCompiled] = useState(marked(code));\n  const [hide, setHide] = useState(true);\n  const [docs, setDocs] = useState(null);\n  const [showDocs, setShowDocs] = useState(false);\n\n  const openMD = () => {\n    setHide(true);\n    setShowDocs(false);\n  };\n\n  const openPreview = () => {\n    setHide(false);\n    setShowDocs(false);\n  };\n\n  const handleChange = e => {\n    const newCode = e.target.value;\n    setCode(newCode);\n    setCompiled(marked(newCode));\n  };\n\n  const fetchDocs = async () => {\n    try {\n      const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://www.markdownguide.org/api/v1/basic-syntax.json\");\n      const responseData = await response.json();\n      console.log(responseData.basic_syntax);\n      setDocs(responseData.basic_syntax);\n      setShowDocs(true);\n      setHide(false);\n    } catch (error) {\n      console.error(\"Error fetching docs:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openMD,\n          className: \"btn\",\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchDocs,\n          children: \"Docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openPreview,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), hide ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : null, showDocs && docs ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"docs-container\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"docs-list\",\n            children: docs.map((doc, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"doc-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: doc.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: doc.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), doc.examples && doc.examples.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"examples\",\n                children: doc.examples.map((example, exampleIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"example-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: [\"Examples \", exampleIndex + 1, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 28\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Markdown:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: example.markdown\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"HTML:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    dangerouslySetInnerHTML: {\n                      __html: example.html\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 27\n                  }, this)]\n                }, exampleIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), doc.examples && doc.examples.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"examples\",\n                children: doc.additional_examples.map((example, exampleIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"example-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: example.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: example.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"HTML:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    dangerouslySetInnerHTML: {\n                      __html: example.html\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 27\n                  }, this)]\n                }, exampleIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : null, !hide && !showDocs ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: compiled,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"PGxH2htvDAtAC8ncvEZW3w/ULh0=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/ITI/Course ReactJS/markdown-previewer/src/App.js"],"names":["React","useState","marked","useLocalStorage","App","code","setCode","compiled","setCompiled","hide","setHide","docs","setDocs","showDocs","setShowDocs","openMD","openPreview","handleChange","e","newCode","target","value","fetchDocs","response","fetch","responseData","json","console","log","basic_syntax","error","map","doc","index","name","description","examples","length","example","exampleIndex","markdown","__html","html","additional_examples"],"mappings":"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","sourcesContent":["\r\nimport \"./App.css\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport {marked} from \"marked\";\r\nimport useLocalStorage from \"./components/useLocalStorage\";\r\n\r\nconst App = () => {\r\n  const [code, setCode] = useLocalStorage(\"markdown\", \"## Hello\");\r\n  const [compiled, setCompiled] = useState(marked(code));\r\n  const [hide, setHide] = useState(true);\r\n  const [docs, setDocs] = useState(null);\r\n  const [showDocs, setShowDocs] = useState(false);\r\n\r\n  const openMD = () => {\r\n    setHide(true);\r\n    setShowDocs(false);\r\n  };\r\n\r\n  const openPreview = () => {\r\n    setHide(false);\r\n    setShowDocs(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const newCode = e.target.value;\r\n    setCode(newCode);\r\n    setCompiled(marked(newCode));\r\n  };\r\n\r\n  const fetchDocs = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://cors-anywhere.herokuapp.com/https://www.markdownguide.org/api/v1/basic-syntax.json\"\r\n      );\r\n      const responseData = await response.json();\r\n      console.log(responseData.basic_syntax);\r\n      setDocs(responseData.basic_syntax);\r\n      setShowDocs(true);\r\n      setHide(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching docs:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>MarkDown Previewer React App</h1>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"btns\">\r\n          <button onClick={openMD} className=\"btn\">\r\n            MarkDown\r\n          </button>\r\n          <button onClick={fetchDocs}>Docs</button>\r\n          <button onClick={openPreview}>Preview</button>\r\n        </div>\r\n\r\n        {hide ? (\r\n          <div>\r\n            <textarea onChange={handleChange} value={code} />\r\n          </div>\r\n        ) : null}\r\n\r\n        {showDocs && docs ? (\r\n          <p>\r\n             <div className=\"docs-container\">\r\n            \r\n            <ul className=\"docs-list\">\r\n              {docs.map((doc, index) => (\r\n                <li key={index} className=\"doc-item\">\r\n                  <h3>{doc.name}</h3>\r\n                  <p>{doc.description}</p>\r\n                  <pre></pre>\r\n\r\n                  {doc.examples && doc.examples.length > 0 && (\r\n                    <div className=\"examples\">\r\n                     \r\n                      {doc.examples.map((example, exampleIndex) => (\r\n                        <div key={exampleIndex} className=\"example-item\">\r\n                           <h4>Examples {exampleIndex+1}:</h4>\r\n                          <h5>Markdown:</h5>\r\n                          <p>{example.markdown}</p>\r\n                          <h5>HTML:</h5>\r\n                          <p dangerouslySetInnerHTML={{ __html: example.html }}></p>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  <br/>\r\n                  {doc.examples && doc.examples.length > 0 && (\r\n                    <div className=\"examples\">\r\n                     \r\n                      {doc.additional_examples.map((example, exampleIndex) => (\r\n                        <div key={exampleIndex} className=\"example-item\">\r\n                           {/* <h4>Examples {exampleIndex+1}:</h4> */}\r\n                          {/* <h5>Markdown:</h5> */}\r\n                          <h3>{example.name}</h3>\r\n                          <p>{example.description}</p>\r\n                          <h5>HTML:</h5>\r\n                          <p dangerouslySetInnerHTML={{ __html: example.html }}></p>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n            {/* {JSON.stringify(docs, null, 50)} */}\r\n          </p>\r\n        ) : null}\r\n\r\n        {!hide && !showDocs ? (\r\n          <div>\r\n            <textarea value={compiled} readOnly />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}