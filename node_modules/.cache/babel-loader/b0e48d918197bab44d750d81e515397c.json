{"ast":null,"code":"var _jsxFileName = \"F:\\\\ITI\\\\Course ReactJS\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { marked } from \"marked\";\nimport useLocalStorage from \"./components/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [code, setCode] = useLocalStorage(\"markdown\", \"## Hello\");\n  const [compiled, setCompiled] = useState(marked(code));\n  const [hide, hidePreview] = useState(true);\n  const [docs, setDocs] = useState(null);\n\n  const openMD = () => {\n    hidePreview(true);\n  };\n\n  const openPreview = () => {\n    hidePreview(false);\n  };\n\n  const handleChange = e => {\n    const newCode = e.target.value;\n    setCode(newCode);\n    setCompiled(marked(newCode));\n  };\n\n  const fetchDocs = async () => {\n    try {\n      const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://www.markdownguide.org/api/v1/basic-syntax.json\");\n      const responseData = await response.json();\n      setDocs(responseData.basic_syntax);\n    } catch (error) {\n      console.error(\"Error fetching docs:\", error);\n    }\n  };\n\n  const renderDocs = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Docs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(docs).map(_ref => {\n          let [key, value] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), \": \", value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openMD,\n          className: \"btn\",\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchDocs,\n          children: \"Docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openPreview,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), hide ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: compiled,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), docs ? renderDocs() : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"qcXjVAOvFgI2MuCYPHU57HcjghA=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/ITI/Course ReactJS/markdown-previewer/src/App.js"],"names":["React","useEffect","useState","marked","useLocalStorage","App","code","setCode","compiled","setCompiled","hide","hidePreview","docs","setDocs","openMD","openPreview","handleChange","e","newCode","target","value","fetchDocs","response","fetch","responseData","json","basic_syntax","error","console","renderDocs","Object","entries","map","key"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { marked } from \"marked\";\r\nimport useLocalStorage from \"./components/useLocalStorage\";\r\n\r\nconst App = () => {\r\n  const [code, setCode] = useLocalStorage(\"markdown\", \"## Hello\");\r\n  const [compiled, setCompiled] = useState(marked(code));\r\n  const [hide, hidePreview] = useState(true);\r\n  const [docs, setDocs] = useState(null);\r\n\r\n  const openMD = () => {\r\n    hidePreview(true);\r\n  };\r\n\r\n  const openPreview = () => {\r\n    hidePreview(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const newCode = e.target.value;\r\n    setCode(newCode);\r\n    setCompiled(marked(newCode));\r\n  };\r\n\r\n  const fetchDocs = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://cors-anywhere.herokuapp.com/https://www.markdownguide.org/api/v1/basic-syntax.json\"\r\n      );\r\n      const responseData = await response.json();\r\n      setDocs(responseData.basic_syntax);\r\n    } catch (error) {\r\n      console.error(\"Error fetching docs:\", error);\r\n    }\r\n  };\r\n\r\n  const renderDocs = () => {\r\n    return (\r\n      <div>\r\n        <h2>Docs</h2>\r\n        <ul>\r\n          {Object.entries(docs).map(([key, value]) => (\r\n            <li key={key}>\r\n              <strong>{key}</strong>: {value}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>MarkDown Previewer React App</h1>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"btns\">\r\n          <button onClick={openMD} className=\"btn\">\r\n            MarkDown\r\n          </button>\r\n          <button onClick={fetchDocs}>Docs</button>\r\n          <button onClick={openPreview}>Preview</button>\r\n        </div>\r\n\r\n        {hide ? (\r\n          <div>\r\n            <textarea onChange={handleChange} value={code} />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <textarea value={compiled} readOnly />\r\n          </div>\r\n        )}\r\n\r\n        {docs ? renderDocs() : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}